name: Tests

on:
  push:
    branches:
      - main
  repository_dispatch:
    # to run this, send a POST API call at repos/IDAES/idaes-pse/dispatches with the specified event_type
    # e.g. `gh repos/IDAES/idaes-pse/dispatches -F event_type=ci_run_tests`
    types: [ci_run_tests]
  workflow_dispatch:
    inputs:
      git-ref:
        description: Git hash (optional)
        required: false
  pull_request:
    types:
      - opened
      # ready_for_review occurs when a draft PR is turned to non-draft
      - ready_for_review
      # synchronize occurs whenever commits are pushed to the PR branch
      - synchronize

concurrency:
  # NOTE: the value of `group` should be chosen carefully,
  # otherwise we might end up over- or under-canceling workflow runs
  # e.g. if we want to have Codecov results for each commit on `main`,
  # we should use something `github.sha` instead of `github.ref_name`
  # to avoid over-canceling runs from `main`
  # in which case we'd need to access the PR number from somewhere else rather than `github.ref_name`
  # to avoid under-canceling runs from PRs
  group: ${{ github.workflow }}-${{ github.ref_name }}
  cancel-in-progress: true

env:
  # default Python version to use for checks that do not require multiple versions
  DEFAULT_PYTHON_VERSION: '3.8'
  IDAES_CONDA_ENV_NAME_DEV: idaes-ui-dev
  PYTEST_ADDOPTS: "--color=yes"

defaults:
  run:
    # -l: login shell, needed when using Conda run:
    shell: bash -l {0}

jobs:
  setup:
    runs-on: ${{ matrix.runner-image }}
    strategy:
      fail-fast: false
      matrix:
        python-version:
          - '3.8'
          - '3.9'
          - '3.10'
          - '3.11'
        os:
          - linux
          - win64
        include:
          - os: linux
            runner-image: ubuntu-20.04
          - os: win64
            runner-image: windows-2022
    steps:
      - uses: actions/checkout@v3
      - name: Set up Conda environment
        uses: conda-incubator/setup-miniconda@v2.2.0
        with:
          activate-environment: ${{ env.IDAES_CONDA_ENV_NAME_DEV }}
          python-version: ${{ matrix.python-version }}
      - name: Install the code
        uses: ./.github/actions/install
        with:
          install-target: -r requirements-dev.txt

  # pytest:
  #   name: pytest (py${{ matrix.python-version }}/${{ matrix.os }})
  #   needs: setup
  #   steps:
  #     - name: pytest
  #     - run: pytest -v -s -m "not integration"

  # cypress: 
  #   name: cypress test (py${{ matrix.python-version }}/${{ matrix.os }})

  # pytest:
  #   # description: Run pytest with dev dependencies
  #   name: pytest (py${{ matrix.python-version }}/${{ matrix.os }})
  #   runs-on: ${{ matrix.runner-image }}
  #   strategy:
  #     fail-fast: false
  #     matrix:
  #       python-version:
  #         - '3.8'
  #         - '3.9'
  #         - '3.10'
  #         - '3.11'
  #       os:
  #         - linux
  #         - win64
  #       include:
  #         - os: linux
  #           runner-image: ubuntu-20.04
  #         - os: win64
  #           runner-image: windows-2022
  #   steps:
  #     - uses: actions/checkout@v3
  #     - name: Set up Conda environment
  #       uses: conda-incubator/setup-miniconda@v2.2.0
  #       with:
  #         activate-environment: ${{ env.IDAES_CONDA_ENV_NAME_DEV }}
  #         python-version: ${{ matrix.python-version }}
  #     - name: Install the code
  #       uses: ./.github/actions/install
  #       with:
  #         install-target: -r requirements-dev.txt
  #     - name: Run pytest
  #       run: pytest -v -s -m "not integration"
        
  # cypress:
  #   name: cypress (py${{ matrix.python-version }}/${{ matrix.os }})
  #   runs-on: ${{ matrix.runner-image }}
  #   strategy:
  #     fail-fast: false
  #     matrix:
  #       python-version:
  #         - '3.8'
  #         - '3.9'
  #         - '3.10'
  #         - '3.11'
  #       os:
  #         - linux
  #         - win64
  #       include:
  #         - os: linux
  #           runner-image: ubuntu-20.04
  #         - os: win64
  #           runner-image: windows-2022
  #   steps:
  #     - uses: actions/checkout@v3
  #     - name: Set up Conda environment
  #       uses: conda-incubator/setup-miniconda@v2
  #       with:
  #         activate-environment: ${{ env.IDAES_CONDA_ENV_NAME_DEV }}
  #         python-version: ${{ matrix.python-version }}
  #     - name: Install additional dependencies
  #       run: pip install idaes-pse
  #     - name: Install the code
  #       uses: ./.github/actions/install
  #       with:
  #         install-target: .[dev]

  #     - uses: actions/checkout@v3
  #     - uses: actions/setup-node@v3
  #       with:
  #         node-version: "18.x"
  #     - name: install pip
  #       run: apt install python3-pip

  #     - name: install idaes-ui
  #       run: pip install .
      
      # - name: run UI
      #   run: npm run ui

      # - name: run cypress
      #   run: npm run test




    # steps:
    #   - uses: actions/checkout@v3
    #   - uses: actions/setup-node@v3
    #     with:
    #       node-version: "18.x"
          # cache: npm
          # cache-dependency-path: package-lock.json
      # - name: Set up Conda environment
      #   uses: conda-incubator/setup-miniconda@v2.2.0
      #   with:
      #     activate-environment: ${{ env.IDAES_CONDA_ENV_NAME_DEV }}
      #     python-version: ${{ matrix.python-version }}
      # - name: Install Python package and dependencies
      #   uses: ./.github/actions/install
      #   with:
      #     install-target: .[dev]
      # - name: Install JS dependencies
      #   run: npm clean-install
      # - name: Global npm installs
      #   run: npm install --global wait-on
      # - name: Run Cypress
      #   run: npm run test
      #   # run: python bin/run_cypress.py
      # - name: Upload Cypress artifacts
      #   uses: actions/upload-artifact@v3
      #   if: always()
      #   with:
      #       name: cypress_results-${{ matrix.os }}
      #       path: |
      #         cypress/screenshots/